apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'org.sonarqube'

android {
    compileSdkVersion 29
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.orbismobile.testingforandroid"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'


    }

    Properties properties = new Properties()
    def propertiesFile = project.rootProject.file('local.properties')
    if (propertiesFile.exists()) {
        properties.load(propertiesFile.newDataInputStream())
    }

    signingConfigs {


        release {

            // Fetching credentials (declared in local.properties or fetched from CI if there are none)
            def keystoreFile = properties.getProperty('KEYSTORE_FILE') != null ? properties.getProperty('KEYSTORE_FILE') : System.getenv('KEYSTORE_FILE')
            def keystorePassword = properties.getProperty('KEYSTORE_PASSWORD') != null ? properties.getProperty('KEYSTORE_PASSWORD') : System.getenv('KEYSTORE_PASSWORD')
            def keystoreAlias = properties.getProperty('KEYSTORE_ALIAS') != null ? properties.getProperty('KEYSTORE_ALIAS') : System.getenv('KEYSTORE_ALIAS')
            def keystoreAliasPassword = properties.getProperty('KEYSTORE_KEY_PASSWORD') != null ? properties.getProperty('KEYSTORE_KEY_PASSWORD') : System.getenv('KEYSTORE_KEY_PASSWORD')

            storeFile file(keystoreFile)
            storePassword keystorePassword
            keyAlias keystoreAlias
            keyPassword keystoreAliasPassword

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.release
        }
    }
}

sonarqube {
    def projectKey
    logger.log(LogLevel.ERROR, "Branch: " + gitBranch())
    if (gitBranch() == "alpha"){
        projectKey = "TestCiCdApp.alpha"
    }else if (gitBranch() == "master"){
        projectKey = "TestCiCdApp.master"
    }else{
        logger.log(LogLevel.ERROR, "This branch aren't tracked by sonarqube")
        return
    }

    logger.log(LogLevel.ERROR, "Project key is: " + projectKey)
    properties {
        property "sonar.projectName", projectKey
        property "sonar.projectKey", projectKey
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.language", "kotlin"
        property "sonar.sources", "src/main/java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.login", "admin"
        property "sonar.password", "admin"
        property "sonar.coverage.exclusions", "src/androidTest/java"
    }
}

def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation platform('com.google.firebase:firebase-bom:26.0.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    implementation 'androidx.test.espresso:espresso-idling-resource:3.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:retrofit-converters:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    implementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
}
